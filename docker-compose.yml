version: '3'

services:
  db:
    build: ./db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      target: production
    ports:
      - "5555:5000"
    depends_on:
      test_backend:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/rsvp_app

  frontend:
    build: 
      context: ./frontend
      target: production
    depends_on:
      test_frontend:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  test_backend: # Define the test_backend service for running the unit tests
    build:
      context: ./backend
      target: tester # Specify the target stage for building the image
    command: >
      sh -c "python -m unittest APIunittest.py && exit 0"

  test_frontend: # Define the test_frontend service for running the unit tests
    build:
      context: ./frontend
      target: tester # Specify the target stage for building the image
    command: > 
      sh -c "python manage.py test --settings=frontend.settings && exit 0"